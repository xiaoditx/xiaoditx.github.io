<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>小狄同学呀 – 项目实战</title>
    <link>http://localhost:11633/tags/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/</link>
    <description>Recent content in 项目实战 on 小狄同学呀</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 18 Oct 2025 00:00:00 +0000</lastBuildDate>
    
	  <atom:link href="http://localhost:11633/tags/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>轻量化使用为目的的Git简单命令行操作教程</title>
      <link>http://localhost:11633/blog/2025-10-18_1143_%E8%BD%BB%E9%87%8F%E4%BD%BF%E7%94%A8git%E7%9A%84%E7%AE%80%E5%8D%95%E6%93%8D%E4%BD%9C%E6%95%99%E5%AD%A6/</link>
      <pubDate>Sat, 18 Oct 2025 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:11633/blog/2025-10-18_1143_%E8%BD%BB%E9%87%8F%E4%BD%BF%E7%94%A8git%E7%9A%84%E7%AE%80%E5%8D%95%E6%93%8D%E4%BD%9C%E6%95%99%E5%AD%A6/</guid>
      <description>
        
        
        &lt;p&gt;Git 是一个分布式版本控制系统，用于跟踪文件的更改，特别是源代码文件的更改。以下是一些 Git 的简单操作，适合初学者入门：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;初始化仓库&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;git init：在当前目录创建一个新的 Git 仓库。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;克隆仓库&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;git clone [url]：克隆一个远程仓库到本地。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;添加文件到暂存区&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;git add [file]：将指定文件添加到暂存区。&lt;/li&gt;
&lt;li&gt;git add .：将当前目录下的所有更改添加到暂存区。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;提交更改&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;git commit -m &amp;ldquo;[message]&amp;quot;：将暂存区的更改提交到仓库，并附带一条提交信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;查看状态&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;git status：查看当前仓库的状态，包括未跟踪的文件、已修改的文件等。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;查看差异&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;git diff：查看工作区与暂存区之间的差异。&lt;/li&gt;
&lt;li&gt;git diff &amp;ndash;staged：查看暂存区与最后一次提交之间的差异。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;查看提交历史&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;git log：查看提交历史。&lt;/li&gt;
&lt;li&gt;git log &amp;ndash;oneline：以简洁格式查看提交历史。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;8&#34;&gt;
&lt;li&gt;分支操作&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;git branch：列出所有本地分支。&lt;/li&gt;
&lt;li&gt;git branch [branch-name]：创建一个新分支。&lt;/li&gt;
&lt;li&gt;git checkout [branch-name]：切换到指定分支。&lt;/li&gt;
&lt;li&gt;git checkout -b [branch-name]：创建并切换到新分支。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;9&#34;&gt;
&lt;li&gt;合并分支&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;git merge [branch-name]：将指定分支合并到当前分支。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;10&#34;&gt;
&lt;li&gt;推送到远程仓库&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;git push [remote] [branch]：将本地分支的更改推送到远程仓库。&lt;/li&gt;
&lt;li&gt;git push -u [remote] [branch]：将本地分支推送到远程仓库，并设置为默认上游分支。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;11&#34;&gt;
&lt;li&gt;拉取远程仓库的更改&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;git pull [remote] [branch]：从远程仓库拉取更改并合并到当前分支。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;12&#34;&gt;
&lt;li&gt;撤销操作&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;git checkout &amp;ndash; [file]：撤销工作区中文件的更改。&lt;/li&gt;
&lt;li&gt;git reset HEAD [file]：将文件从暂存区撤出。&lt;/li&gt;
&lt;li&gt;git revert [commit]：创建一个新的提交，撤销指定提交的更改。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;13&#34;&gt;
&lt;li&gt;标签&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;git tag [tag-name]：创建一个轻量级标签。&lt;/li&gt;
&lt;li&gt;git tag -a [tag-name] -m &amp;ldquo;[message]&amp;quot;：创建一个带注释的标签。&lt;/li&gt;
&lt;li&gt;git push [remote] [tag-name]：将标签推送到远程仓库。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;14&#34;&gt;
&lt;li&gt;查看远程仓库&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;git remote -v：查看远程仓库的详细信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;15&#34;&gt;
&lt;li&gt;配置&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;git config &amp;ndash;global user.name &amp;ldquo;[name]&amp;quot;：设置全局用户名。&lt;/li&gt;
&lt;li&gt;git config &amp;ndash;global user.email &amp;ldquo;[email]&amp;quot;：设置全局用户邮箱。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些操作是 Git 的基础，适合日常使用。随着你对 Git 的熟悉，可以学习更高级的功能，如变基（rebase）、 stash、子模块等。&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
